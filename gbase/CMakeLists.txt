CMAKE_MINIMUM_REQUIRED(VERSION 2.8.10)

project(gbase)


#设置编译器
SET(CMAKE_CXX_COMPILER "g++")
#设置构建类型，及相应的编译选项
set (CMAKE_CXX_FLAGS " -std=c++17")
SET(CMAKE_BUILD_TYPE "Release")
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -Og -Wall -g -fmessage-length=0 -MMD -MP")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O2 -finline-functions -g -Wall -fmessage-length=0 -MMD -MP")

#设置库输出路径
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/../lib)

MESSAGE("++++++++++++++Start GBase+++++++++++++++++")

#头文件搜索目录
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../include/gbase)
#链接库搜索路径
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../lib)

AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR} ROOT_SRCS)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/memory MEMORY_SRCS)
SET (ALL_SRCS ${ROOT_SRCS} ${MEMORY_SRCS}
SET(TARGET_NAME gbase)
# 设置生成可执行文件的名称
ADD_LIBRARY(${TARGET_NAME} ${ALL_SRCS} )
